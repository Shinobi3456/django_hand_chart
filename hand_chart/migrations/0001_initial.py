# Generated by Django 4.2.3 on 2023-07-24 04:27

import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('color', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=18, samples=None, verbose_name='Цвет')),
                ('description', models.TextField(blank=True, default='', max_length=200, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Цвет варианта',
                'verbose_name_plural': '2. Цвета вариантов',
            },
        ),
        migrations.CreateModel(
            name='GameStacks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('sort', models.PositiveIntegerField(default=500, verbose_name='Сортировка')),
            ],
            options={
                'verbose_name': 'Стек игры',
                'verbose_name_plural': '1. Стеки игры',
                'ordering': ('sort',),
            },
        ),
        migrations.CreateModel(
            name='PokerChips',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=2, verbose_name='Комбинация')),
                ('suit', models.CharField(choices=[('NS', 'Масть не важна'), ('OS', 'Одномастные'), ('TS', 'Разная масть')], default='NS', max_length=2, verbose_name='Масть')),
                ('position', models.PositiveIntegerField(verbose_name='Позиция в таблице')),
                ('delta_x', models.IntegerField(default=0, verbose_name='Смещение текста по X')),
                ('delta_y', models.IntegerField(default=0, verbose_name='Смещение текста по Y')),
            ],
            options={
                'verbose_name': 'Комбинация фишек',
                'verbose_name_plural': 'Комбинации фишек',
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='TableHandChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200, verbose_name='Название таблицы')),
                ('description', models.TextField(default='', max_length=2000, verbose_name='Описание')),
                ('is_active', models.BooleanField(verbose_name='Активна')),
                ('stack', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hand_chart.gamestacks', verbose_name='Стек игры')),
            ],
            options={
                'verbose_name': 'Таблица Нand Chart',
                'verbose_name_plural': '3. Таблицы Нand Chart',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='ContentHandChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('btn', models.ManyToManyField(blank=True, related_name='btn_color', to='hand_chart.color', verbose_name='Позиция BTN')),
                ('chip', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hand_chart.pokerchips', verbose_name='Комбинация')),
                ('co', models.ManyToManyField(blank=True, related_name='co_color', to='hand_chart.color', verbose_name='Позиция CO')),
                ('hl', models.ManyToManyField(blank=True, related_name='hl_color', to='hand_chart.color', verbose_name='Позиция HJ')),
                ('mp', models.ManyToManyField(blank=True, related_name='mp_color', to='hand_chart.color', verbose_name='Позиция MP')),
                ('mp1', models.ManyToManyField(blank=True, related_name='mp1_color', to='hand_chart.color', verbose_name='Позиция MP1')),
                ('sb', models.ManyToManyField(blank=True, related_name='sb_color', to='hand_chart.color', verbose_name='Позиция SB')),
                ('table', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='table_content', to='hand_chart.tablehandchart', verbose_name='Таблица Hand Chart')),
                ('utg', models.ManyToManyField(blank=True, related_name='utg_color', to='hand_chart.color', verbose_name='Позиция UTG')),
                ('utg1', models.ManyToManyField(blank=True, related_name='utg1_color', to='hand_chart.color', verbose_name='Позиция UTG1')),
            ],
            options={
                'verbose_name': 'Запись в таблице Hand Chart',
                'verbose_name_plural': '4. Записи в таблице Hand Chart',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='PreviewHandChart',
            fields=[
            ],
            options={
                'verbose_name': 'Hand Chart',
                'verbose_name_plural': 'Hand Chart',
                'ordering': ('id',),
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('hand_chart.contenthandchart',),
        ),
    ]
